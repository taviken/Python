from enum import Enum

graphic_chars = {
    "ACUTE": "´",
    "AMPERSAND": "&",
    "APOSTROPHE": "’",
    "ASTERISK": "*",
    "BROKEN_BAR": "¦",
    "CEDILLA": "¸",
    "CENT_SIGN": "¢",
    "CIRCUMFLEX": "^",
    "COLON": ":",
    "COMMERCIAL_AT": "@",
    "COPYRIGHT_SIGN": "©",
    "CURRENCY_SIGN": "¤",
    "DIERESIS": "¨",
    "DIVISION_SIGN": "÷",
    "DOLLAR_SIGN": "$",
    "DOUBLE_QUOTE": '"',
    "EQUALS_SIGN": "=",
    "EXCLAMATION_POINT": "!",
    "FEMININE_ORDINAL_INDICATOR": "ª",
    "GRAVE": "‘",
    "GREATER-THAN_SIGN": ">",
    "HYPHEN_MINUS_SIGN_SOFT_HYPHEN": "-",
    "INVERTED_EXCLAMATION_MARK": "¡",
    "INVERTED_QUESTION_MARK": "¿",
    "LEFT_ANGLE_QUOTATION_MARK": "«",
    "LEFT_PARENTHESIS": "(",
    "LEFT_SQUARE_BRACKET": "[",
    "LESS-THAN_SIGN": "<",
    "LOW_LINE_UNDERSCORE": "_",
    "MACRON": "¯",
    "MASCULINE_ORDINAL_INDICATOR": "º",
    "MICRO": "μ",
    "MIDDLE_DOT": "•",
    "MULTIPLICATION_SIGN": "×",
    "NOT_SIGN": "¬",
    "NUMBER_SIGN": "#",
    "PERCENT_SIGN": "%",
    "PERIOD_FULL_STOP": ".",
    "PILCROW": "¶",
    "PLUS-MINUS_SIGN": "±",
    "PLUS_SIGN": "+",
    "POUND_SIGN": "£",
    "QUESTION_MARK": "?",
    "REGISTERED_TRADE_MARK_SIGN": "®",
    "REVERSE_SOLIDUS": "\\",
    "RIGHT_ANGLE_QUOTATION_MARK": "»",
    "RIGHT_CURLY_BRACE": "}",
    "RIGHT_PARENTHESIS": ")",
    "RIGHT_SQUARE_BRACKET": "]",
    "RING_ABOVE_DEGREE_SIGN": "°",
    "SECTION/PARAGRAPH_SIGN": "§",
    "SEMICOLON": ";",
    "SOLIDUS": "/",
    "SUPERSCRIPT_ONE": "1",
    "SUPERSCRIPT_THREE": "3",
    "SUPERSCRIPT_TWO": "2",
    "TILDE": "~",
    "VERTICAL_LINE": "|",
    "VULGAR_FRACTION_1/4": "¼",
    "VULGAR_FRACTION_1_2": "½",
    "VULGAR_FRACTION_3_4": "¾",
    "YEN_SIGN": "¥",
}

keywords = [
    "FALSE",
    "Object",
    "TRUE",
    "ValueBase",
    "abstract",
    "alias",
    "any",
    "attribute",
    "bitfield",
    "bitmask",
    "bitset",
    "boolean",
    "case",
    "char",
    "component",
    "connector",
    "const",
    "consumes",
    "context",
    "custom",
    "default",
    "double",
    "emits",
    "enum",
    "eventtype",
    "exception",
    "factory",
    "finder",
    "fixed",
    "float",
    "getraises",
    "home",
    "import",
    "in",
    "inout",
    "int16",
    "int32",
    "int64",
    "int8",
    "interface",
    "local",
    "long",
    "manages",
    "map",
    "mirrorport",
    "module",
    "multiple",
    "native",
    "octet",
    "oneway",
    "out",
    "port",
    "porttype",
    "primarykey",
    "private",
    "provides",
    "public",
    "publishes",
    "raises",
    "readonly",
    "sequence",
    "setraises",
    "short",
    "string",
    "struct",
    "supports",
    "switch",
    "truncatable",
    "typedef",
    "typeid",
    "typename",
    "typeprefix",
    "uint16",
    "uint32",
    "uint64",
    "uint8",
    "union",
    "unsigned",
    "uses",
    "valuetype",
    "void",
    "wchar",
    "wstring",
]
GRAPHIC_CHARS = Enum("GRAPHIC_CHARS", graphic_chars)

EXACT_TOKEN_TYPES = {
    "!": "EXCLAMATION",
    "!=": "NOTEQUAL",
    "%": "PERCENT",
    "%=": "PERCENTEQUAL",
    "&": "AMPER",
    "&=": "AMPEREQUAL",
    "(": "LPAR",
    ")": "RPAR",
    "*": "STAR",
    "**": "DOUBLESTAR",
    "**=": "DOUBLESTAREQUAL",
    "*=": "STAREQUAL",
    "+": "PLUS",
    "+=": "PLUSEQUAL",
    ",": "COMMA",
    "-": "MINUS",
    "-=": "MINEQUAL",
    "->": "RARROW",
    ".": "DOT",
    "...": "ELLIPSIS",
    "/": "SLASH",
    "//": "DOUBLESLASH",
    "//=": "DOUBLESLASHEQUAL",
    "/=": "SLASHEQUAL",
    ":": "COLON",
    ":=": "COLONEQUAL",
    ";": "SEMI",
    "<": "LESS",
    "<<": "LEFTSHIFT",
    "<<=": "LEFTSHIFTEQUAL",
    "<=": "LESSEQUAL",
    "=": "EQUAL",
    "==": "EQEQUAL",
    ">": "GREATER",
    ">=": "GREATEREQUAL",
    ">>": "RIGHTSHIFT",
    ">>=": "RIGHTSHIFTEQUAL",
    "@": "AT",
    "@=": "ATEQUAL",
    "[": "LSQB",
    "]": "RSQB",
    "^": "CIRCUMFLEX",
    "^=": "CIRCUMFLEXEQUAL",
    "{": "LBRACE",
    "|": "VBAR",
    "|=": "VBAREQUAL",
    "}": "RBRACE",
    "~": "TILDE",
}

_operators = {v: k for k, v in EXACT_TOKEN_TYPES.items()}
